{"version":3,"sources":["webpack:///src/app/modules/auth/auth-guard.service.ts","webpack:///src/app/modules/not-found/not-found.component.ts","webpack:///src/app/modules/not-found/not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/modules/recipe/recipe.component.html","webpack:///src/app/modules/recipe/recipe.component.ts","webpack:///src/app/modules/comments/comments.component.ts","webpack:///src/app/modules/comments/comments.component.html","webpack:///src/app/modules/layout/layout.component.ts","webpack:///src/app/modules/layout/layout.component.html","webpack:///src/app/modules/auth/auth-http.interceptor.ts","webpack:///src/app/modules/recipes/recipes.component.html","webpack:///src/app/modules/recipes/recipes.component.ts","webpack:///src/app/modules/comment-add/comment-add.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/recipe/recipe.service.ts","webpack:///src/app/modules/logout/logout.component.ts","webpack:///src/app/modules/logout/logout.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/login/login.component.ts","webpack:///src/app/modules/login/login.component.html","webpack:///src/app/modules/recipes/recipes.service.ts","webpack:///src/app/modules/snack-bar/snack-bar.service.ts","webpack:///src/app/modules/auth/auth.service.ts","webpack:///src/app/modules/register/register.component.ts","webpack:///src/app/modules/register/register.component.html","webpack:///src/app/common/global-constants.ts","webpack:///src/app/modules/comment-add/comment-add.component.ts","webpack:///src/app/modules/comment-add/comment-add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthGuardService","authService","location","isUserLoggedIn","logoutUser","path","NotFoundComponent","selector","templateUrl","styleUrls","environment","production","RecipeComponent","route","recipeService","subscription","params","pipe","id","getRecipe","subscribe","image","rest","recipe","imagesURL","unsubscribe","providers","CommentsComponent","isCommentAddFormOpened","comment","comments","push","openCommentAddForm","recipeId","LayoutComponent","breakpointObserver","isHandset$","observe","Handset","result","matches","contentChildren","AuthHttpInterceptor","request","next","authRequest","clone","setHeaders","Authorization","getToken","handle","error","status","RecipesComponent","recipesService","recipes","category","categoryRouteParam","getRecipes","map","method","substr","CommentAddService","http","addComment","payload","post","apiURL","providedIn","AppComponent","title","RecipeService","get","LogoutComponent","snackBar","open","logout","AppModule","provide","useClass","multi","declarations","imports","bootstrap","LoginComponent","activatedRoute","fb","router","retUrl","form","group","login","required","password","queryParamMap","value","navigate","forEach","onSubmit","RecipesService","SnackBarService","zone","message","panelClass","run","duration","AuthService","isloggedIn","response","setToken","token","removeToken","url","includes","queryParams","localStorage","setItem","removeItem","getItem","RegisterComponent","register","GlobalConstants","baseHref","CommentAddComponent","commentAddService","addCommentEvent","content","id_recipe","toString","newComment","emit","routes","component","canActivate","children","data","AppRoutingModule","useValue","forRoot","relativeLinkResolution","exports","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { CanActivate, UrlTree } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private authService: AuthService, private location: Location) {}\n\n  canActivate(): boolean | UrlTree {\n    if (!this.authService.isUserLoggedIn()) {\n      this.authService.logoutUser(this.location.path());\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n  <p>Nie odnaleziono strony.</p>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"recipe\">\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"header\">\n        <mat-card-title class=\"title\">{{ recipe.title }}</mat-card-title>\n        <img src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" class=\"image\" />\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"card\">\n        <mat-card-content>\n          <p class=\"subheader\">Składniki</p>\n          <p class=\"text\">\n            {{ recipe.ingredients }}\n          </p>\n          <p class=\"subheader\">Wykonanie</p>\n          <p class=\"text\">\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <app-comments\n        [recipeId]=\"recipe.id\"\n        [comments]=\"recipe.comments\"\n      ></app-comments>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipeService } from \"./recipe.service\";\n\n@Component({\n  selector: \"app-recipe\",\n  templateUrl: \"./recipe.component.html\",\n  styleUrls: [\"./recipe.component.scss\"],\n  providers: [RecipeService],\n})\nexport class RecipeComponent implements OnDestroy {\n  recipe: RecipeModel;\n  subscription: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService\n  ) {\n    this.subscription = this.route.params\n      .pipe(switchMap(({ id }) => this.recipeService.getRecipe(id)))\n      .subscribe(({ image, ...rest }) => {\n        this.recipe = {\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n        };\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Comment as CommentModel } from \"../../model/comment\";\n\n@Component({\n  selector: \"app-comments\",\n  templateUrl: \"./comments.component.html\",\n  styleUrls: [\"./comments.component.scss\"],\n})\nexport class CommentsComponent {\n  @Input() recipeId: string;\n  @Input() comments: CommentModel[];\n  isCommentAddFormOpened: boolean = false;\n\n  constructor() {}\n\n  addComment(comment: CommentModel) {\n    this.comments.push(comment);\n    this.isCommentAddFormOpened = false;\n  }\n\n  openCommentAddForm() {\n    this.isCommentAddFormOpened = true;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <mat-list class=\"list\">\n      <mat-list-item *ngFor=\"let comment of comments; index as i\">\n        <mat-icon mat-list-icon class=\"icon\" color=\"primary\">comment</mat-icon>\n        {{ comment.content }}\n        <mat-divider></mat-divider>\n      </mat-list-item>\n    </mat-list>\n    <app-comment-add\n      [recipeId]=\"recipeId\"\n      *ngIf=\"isCommentAddFormOpened\"\n      (addCommentEvent)=\"addComment($event)\"\n    ></app-comment-add>\n  </mat-card-content>\n  <mat-card-actions class=\"actions\">\n    <button (click)=\"openCommentAddForm()\" mat-raised-button color=\"primary\">\n      Dodaj komentarz\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, ContentChildren } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-layout\",\n  templateUrl: \"./layout.component.html\",\n  styleUrls: [\"./layout.component.scss\"],\n})\nexport class LayoutComponent {\n  @ContentChildren(Component) contentChildren;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar class=\"toolbar__vertical\">\n      <a mat-list-item routerLink=\"/\"\n        ><mat-icon class=\"icon\">restaurant_menu</mat-icon></a\n      >\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/']\">Wszystkie przepisy</a>\n      <a mat-list-item [routerLink]=\"['/cakes']\">Ciasta</a>\n      <a mat-list-item [routerLink]=\"['/salads']\">Sałatki</a>\n      <a mat-list-item [routerLink]=\"['/soups']\">Zupy</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"content\">\n    <mat-toolbar color=\"primary\" class=\"toolbar__horizontal\">\n      <button\n        type=\"button\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <span>Przepisy kulinarne</span>\n      <app-logout></app-logout>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from \"@angular/common/http\";\nimport { Location } from \"@angular/common\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class AuthHttpInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private location: Location) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`,\n      },\n    });\n    return next.handle(authRequest).pipe(\n      catchError((error) => {\n        if (error.status === 401) {\n          this.authService.logoutUser(this.location.path());\n        }\n        throw error;\n      })\n    );\n  }\n}\n","<div class=\"grid-container\">\n  <div class=\"grid-item\" *ngFor=\"let recipe of recipes; index as i\">\n    <a\n      mat-list-item\n      [routerLink]=\"\n        categoryRouteParam ? [recipe.id] : [recipe.categoryName, recipe.id]\n      \"\n    >\n      <mat-card class=\"card\">\n        <mat-card-header>\n          <mat-card-title>{{ recipe.title }}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" />\n        <mat-card-content>\n          <p>\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </a>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipesService } from \"./recipes.service\";\n\n@Component({\n  selector: \"app-recipes\",\n  templateUrl: \"./recipes.component.html\",\n  styleUrls: [\"./recipes.component.scss\"],\n  providers: [RecipesService],\n})\nexport class RecipesComponent implements OnDestroy {\n  recipes: RecipeModel[] = [];\n  categoryRouteParam?: RecipeModel[\"categoryName\"];\n  subscription: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipesService: RecipesService\n  ) {\n    this.subscription = this.route.params\n      .pipe(\n        switchMap(({ category }) => {\n          this.categoryRouteParam = category;\n          return this.recipesService.getRecipes(category);\n        })\n      )\n      .subscribe((recipes) => {\n        this.recipes = recipes.map(({ image, method, ...rest }) => ({\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n          method: method.substr(0, 250) + \"...\",\n        }));\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Comment } from \"../../model/comment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommentAddService {\n  constructor(private http: HttpClient) {}\n\n  addComment = (payload: Pick<Comment, \"id_recipe\" | \"content\">) =>\n    this.http.post<Comment>(\n      `${GlobalConstants.apiURL}/comments/create`,\n      payload\n    );\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"Przepisy kulinarne\";\n}\n","<div class=\"app\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipeService {\n  constructor(private http: HttpClient) {}\n\n  getRecipe = (id: string) =>\n    this.http\n      .get<RecipeModel>(`${GlobalConstants.apiURL}/recipes/${id}`)\n      .pipe((recipe) => recipe);\n}\n","import { Component } from \"@angular/core\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { Location } from \"@angular/common\";\nimport { SnackBarService } from \"../snack-bar/snack-bar.service\";\n\n@Component({\n  selector: \"app-logout\",\n  templateUrl: \"./logout.component.html\",\n  styleUrls: [\"./logout.component.scss\"],\n})\nexport class LogoutComponent {\n  constructor(\n    private authService: AuthService,\n    private location: Location,\n    private snackBar: SnackBarService\n  ) {}\n\n  logout() {\n    this.authService.logoutUser(this.location.path());\n    this.snackBar.open(\"Zostałeś wylogowany.\", \"success\");\n  }\n}\n","<button mat-button (click)=\"logout()\">\n  <mat-icon class=\"icon\">power_settings_new</mat-icon>\n  <span class=\"text\">Wyloguj się</span>\n</button>\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\n// app\nimport { AppComponent } from \"./app.component\";\nimport { AppRoutingModule } from \"./app-routing.module\";\n// components\nimport { CommentAddComponent } from \"./modules/comment-add/comment-add.component\";\nimport { CommentsComponent } from \"./modules/comments/comments.component\";\nimport { LayoutComponent } from \"./modules/layout/layout.component\";\nimport { LoginComponent } from \"./modules/login/login.component\";\nimport { LogoutComponent } from \"./modules/logout/logout.component\";\nimport { NotFoundComponent } from \"./modules/not-found/not-found.component\";\nimport { RecipeComponent } from \"./modules/recipe/recipe.component\";\nimport { RecipesComponent } from \"./modules/recipes/recipes.component\";\nimport { RegisterComponent } from \"./modules/register/register.component\";\nimport { SnackBarService } from \"./modules/snack-bar/snack-bar.service\";\n// auth\nimport { AuthGuardService } from \"./modules/auth/auth-guard.service\";\nimport { AuthHttpInterceptor } from \"./modules/auth/auth-http.interceptor\";\nimport { AuthService } from \"./modules/auth/auth.service\";\n// material\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentAddComponent,\n    CommentsComponent,\n    LayoutComponent,\n    LoginComponent,\n    LogoutComponent,\n    NotFoundComponent,\n    RecipeComponent,\n    RecipesComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    LayoutModule,\n    NoopAnimationsModule,\n    ReactiveFormsModule,\n    // material modules\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n  ],\n  providers: [\n    AuthGuardService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthHttpInterceptor,\n      multi: true,\n    },\n    SnackBarService,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { SnackBarService } from \"../snack-bar/snack-bar.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  retUrl: string = \"/\";\n  form: FormGroup;\n  subscription: Subscription[] = [];\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: SnackBarService\n  ) {\n    this.form = this.fb.group({\n      login: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.subscription.push(\n      this.activatedRoute.queryParamMap.subscribe((params) => {\n        this.retUrl = params.get(\"retUrl\");\n      })\n    );\n  }\n\n  onSubmit() {\n    if (!this.form.value.login || !this.form.value.password) {\n      return;\n    }\n    this.subscription.push(\n      this.authService.login(this.form.value).subscribe(\n        () => {\n          this.snackBar.open(\"Zostałeś zalogowany.\", \"success\");\n          if (this.retUrl !== null) {\n            this.router.navigate([this.retUrl]);\n          } else {\n            this.router.navigate([\"/\"]);\n          }\n        },\n        () => {\n          this.snackBar.open(\"Logowanie nie powiodło się.\", \"error\");\n        }\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.forEach((subscription) => subscription.unsubscribe());\n  }\n}\n","<div class=\"login-window\">\n  <mat-card class=\"login-card\">\n    <mat-card-content class=\"content\">\n      <div class=\"logo\">\n        <mat-icon class=\"icon\" color=\"primary\">restaurant_menu</mat-icon>\n        <span class=\"title\"> Przepisy kulinarne</span>\n      </div>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            type=\"text\"\n            formControlName=\"login\"\n            matInput\n            placeholder=\"login\"\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            formControlName=\"password\"\n            matInput\n            placeholder=\"hasło\"\n            type=\"password\"\n          />\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button color=\"primary\">\n          Zloguj się\n        </button>\n      </form>\n    </mat-card-content>\n    <mat-card-actions class=\"actions\">\n      <a [routerLink]=\"['/register']\" class=\"link\">\n        <button mat-button color=\"secondary\">Zarejsetruj się</button>\n      </a>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipesService {\n  constructor(private http: HttpClient) {}\n\n  getRecipes = (category?: RecipeModel[\"categoryName\"]) =>\n    this.http.get<RecipeModel[]>(\n      `${GlobalConstants.apiURL}/recipes/${category || \"\"}`\n    );\n}\n","import { Injectable, NgZone } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SnackBarService {\n  constructor(public snackBar: MatSnackBar, private zone: NgZone) {}\n\n  public open = (message: string, panelClass: \"success\" | \"error\") =>\n    this.zone.run(() => {\n      this.snackBar.open(message, \"\", {\n        duration: 4000,\n        panelClass,\n      });\n    });\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"src/app/common/global-constants\";\nimport { User } from \"src/app/model/user\";\n\n@Injectable()\nexport class AuthService {\n  private isloggedIn: boolean;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.isloggedIn = !!this.getToken();\n  }\n\n  login({ login, password }: Pick<User, \"login\" | \"password\">) {\n    return this.http\n      .post<{ token: string }>(`${GlobalConstants.apiURL}/users/login`, {\n        login,\n        password,\n      })\n      .pipe(\n        tap((response) => {\n          this.setToken(response.token);\n          this.isloggedIn = true;\n          return of(this.isloggedIn);\n        })\n      );\n  }\n\n  logoutUser(retUrl: string): void {\n    this.isloggedIn = false;\n    this.removeToken();\n\n    if (!this.router.url.includes(\"login\")) {\n      this.router.navigate([\"login\"], {\n        queryParams: { retUrl },\n      });\n    }\n  }\n\n  register({ login, password }: Pick<User, \"login\" | \"password\">) {\n    if (!login || !password) {\n      return;\n    }\n\n    return this.http.post<{ token: string }>(\n      `${GlobalConstants.apiURL}/users/register`,\n      {\n        login,\n        password,\n      }\n    );\n  }\n\n  isUserLoggedIn(): boolean {\n    return this.isloggedIn;\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  removeToken() {\n    localStorage.removeItem(\"token\");\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n}\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { SnackBarService } from \"../snack-bar/snack-bar.service\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.scss\"],\n})\nexport class RegisterComponent implements OnDestroy {\n  form: FormGroup;\n  subscription: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router,\n    private snackBar: SnackBarService\n  ) {\n    this.form = this.fb.group({\n      login: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  onSubmit() {\n    if (!this.form.value.login || !this.form.value.password) {\n      return;\n    }\n    this.subscription = this.authService.register(this.form.value).subscribe(\n      () => {\n        this.snackBar.open(\"Zostałeś zarejestrowany.\", \"success\");\n        this.router.navigate([\"/login\"]);\n      },\n      () => {\n        this.snackBar.open(\"Rejestracja nie powiodła się.\", \"error\");\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"login-window\">\n  <mat-card class=\"login-card\">\n    <mat-card-content class=\"content\">\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            type=\"text\"\n            formControlName=\"login\"\n            matInput\n            placeholder=\"login\"\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            formControlName=\"password\"\n            matInput\n            placeholder=\"hasło\"\n            type=\"password\"\n          />\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button color=\"primary\">\n          Zarejestruj się\n        </button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","export class GlobalConstants {\n  public static apiURL: string = \"http://localhost:8080/api\";\n  public static imagesURL: string = \"http://localhost:8080/img\";\n  public static baseHref: string = \"/recipes\";\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { Comment } from \"../../model/comment\";\nimport { SnackBarService } from \"../snack-bar/snack-bar.service\";\nimport { CommentAddService } from \"./comment-add.service\";\n\n@Component({\n  selector: \"app-comment-add\",\n  templateUrl: \"./comment-add.component.html\",\n  styleUrls: [\"./comment-add.component.scss\"],\n  providers: [CommentAddService],\n})\nexport class CommentAddComponent implements OnDestroy {\n  @Input() recipeId: string;\n  @Output() addCommentEvent = new EventEmitter<Comment>();\n\n  form: FormGroup;\n  subscription: Subscription;\n\n  constructor(\n    private commentAddService: CommentAddService,\n    private fb: FormBuilder,\n    private snackBar: SnackBarService\n  ) {\n    this.form = this.fb.group({\n      content: [\"\", Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.subscription = this.commentAddService\n      .addComment({\n        id_recipe: this.recipeId.toString(),\n        ...this.form.value,\n      })\n      .subscribe(\n        (newComment) => {\n          this.addCommentEvent.emit(newComment);\n          this.snackBar.open(\"Komentarz został dodany.\", \"success\");\n        },\n        () => {\n          this.snackBar.open(\"Nie udało się dodać komentarza.\", \"error\");\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field appearance=\"outline\" class=\"full-width\">\n    <mat-label>Wpisz tutaj swój komentarz</mat-label>\n    <textarea\n      formControlName=\"content\"\n      matInput\n      placeholder=\"Miejsce na Twój komentarz\"\n    ></textarea>\n  </mat-form-field>\n  <button type=\"submit\" mat-raised-button color=\"primary\">Zapisz</button>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport { LoginComponent } from \"./modules/login/login.component\";\nimport { RecipesComponent } from \"./modules/recipes/recipes.component\";\nimport { RecipeComponent } from \"./modules/recipe/recipe.component\";\nimport { GlobalConstants } from \"./common/global-constants\";\nimport { AuthGuardService } from \"./modules/auth/auth-guard.service\";\nimport { LayoutComponent } from \"./modules/layout/layout.component\";\nimport { NotFoundComponent } from \"./modules/not-found/not-found.component\";\nimport { RegisterComponent } from \"./modules/register/register.component\";\n\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent,\n  },\n  {\n    path: \"\",\n    component: LayoutComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: \":category\",\n        component: RecipesComponent,\n      },\n      {\n        path: \":category/:id\",\n        component: RecipeComponent,\n        data: { title: \"Przepis\" },\n      },\n      {\n        path: \"\",\n        component: RecipesComponent,\n        data: { title: \"Przepisy kulinarne\" },\n      },\n    ],\n  },\n  {\n    path: \"**\",\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: APP_BASE_HREF,\n      useValue: GlobalConstants.baseHref,\n    },\n  ],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}