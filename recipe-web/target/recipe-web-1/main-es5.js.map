{"version":3,"sources":["webpack:///src/app/modules/auth/auth-guard.service.ts","webpack:///src/app/modules/not-found/not-found.component.ts","webpack:///src/app/modules/not-found/not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/modules/recipe/recipe.component.html","webpack:///src/app/modules/recipe/recipe.component.ts","webpack:///src/app/modules/comments/comments.component.ts","webpack:///src/app/modules/comments/comments.component.html","webpack:///src/app/modules/recipes/recipes.component.html","webpack:///src/app/modules/recipes/recipes.component.ts","webpack:///src/app/modules/comment-add/comment-add.service.ts","webpack:///src/app/modules/menu/menu.component.ts","webpack:///src/app/modules/menu/menu.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/modules/recipe/recipe.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/modules/login/login.component.ts","webpack:///src/app/modules/login/login.component.html","webpack:///src/app/modules/recipes/recipes.service.ts","webpack:///src/app/modules/auth/auth.service.ts","webpack:///src/app/common/global-constants.ts","webpack:///src/app/modules/comment-add/comment-add.component.ts","webpack:///src/app/modules/comment-add/comment-add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/modules/auth/http-auth.interceptor.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthGuardService","authService","location","isUserLoggedIn","logoutUser","path","NotFoundComponent","selector","templateUrl","styleUrls","environment","production","RecipeComponent","route","recipeService","params","pipe","id","getRecipe","subscribe","image","rest","recipe","imagesURL","providers","CommentsComponent","isCommentAddFormOpened","comment","comments","push","openCommentAddForm","recipeId","RecipesComponent","recipesService","recipes","category","categoryRouteParam","getRecipes","map","method","substr","CommentAddService","http","addComment","payload","post","apiURL","providedIn","MenuComponent","breakpointObserver","isHandset$","observe","Handset","result","matches","contentChildren","AppComponent","title","RecipeService","get","AppModule","provide","useClass","multi","declarations","imports","bootstrap","LoginComponent","fb","router","activatedRoute","retUrl","form","group","login","required","password","queryParamMap","value","data","navigate","onSubmit","RecipesService","AuthService","isloggedIn","getToken","response","setToken","token","queryParams","localStorage","getItem","setItem","GlobalConstants","baseHref","CommentAddComponent","commentAddService","addCommentEvent","content","id_recipe","toString","newComment","emit","routes","component","canActivate","children","AppRoutingModule","useValue","forRoot","relativeLinkResolution","exports","HttpAuthInterceptor","request","next","authRequest","clone","setHeaders","Authorization","handle","error","status","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaA,gB;AACX,kCAAoBC,WAApB,EAAsDC,QAAtD,EAA0E;AAAA;;AAAtD,eAAAD,WAAA,GAAAA,WAAA;AAAkC,eAAAC,QAAA,GAAAA,QAAA;AAAsB;;;;wCAEjE;AACT,gBAAI,CAAC,KAAKD,WAAL,CAAiBE,cAAjB,EAAL,EAAwC;AACtC,mBAAKF,WAAL,CAAiBG,UAAjB,CAA4B,KAAKF,QAAL,CAAcG,IAAd,EAA5B;AAEA,qBAAO,KAAP;AACD;;AAED,mBAAO,IAAP;AACD;;;;;;;yBAXUL,gB,EAAgB,iH,EAAA,gH;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaM,iB;AAEX,qCAAc;AAAA;AAAG;;;;qCAET,CACP;;;;;;;yBALUA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,sC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP9B;;AAAG;;AAAgB;;;;;;;;wEDONA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTC,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;;AACE;;AACE;;AACE;;AACE;;AAA8B;;AAAkB;;AAChD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAqB;;AAAS;;AAC9B;;AACE;;AACF;;AACA;;AAAqB;;AAAS;;AAC9B;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AA1BsC;;AAAA;;AACzB;;AAAA;;AAAyB;;AAU1B;;AAAA;;AAIA;;AAAA;;AAQI;;AAAA,iGAAsB,UAAtB,EAAsB,sBAAtB;;;;UCdHC,e;AAGX,iCACUC,KADV,EAEUC,aAFV,EAEsC;AAAA;;AAAA;;AAD5B,eAAAD,KAAA,GAAAA,KAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AAER,eAAKD,KAAL,CAAWE,MAAX,CACGC,IADH,CACQ,iEAAU;AAAA,gBAAGC,EAAH,QAAGA,EAAH;AAAA,mBAAY,KAAI,CAACH,aAAL,CAAmBI,SAAnB,CAA6BD,EAA7B,CAAZ;AAAA,WAAV,CADR,EAEGE,SAFH,CAEa,UAAC,EAAD,EAAwB;AAAvB,gBAAEC,KAAF,GAAO,EAAP,CAAEA,KAAF;AAAA,gBAAYC,IAAZ,GAAgB,yDAAhB,SAAgB,CAAhB;AACV,iBAAI,CAACC,MAAL,GAAc,MAAH,OAAG,CAAH,kBACND,IADM,CAAG,EACL;AACPD,mBAAK,YAAK,yEAAgBG,SAArB,cAAkCH,KAAlC;AADE,aADK,CAAd;AAID,WAPH;AAQD;;;;qCAEU,CAAE;;;;;;;yBAjBFR,e,EAAe,+H,EAAA,8H;AAAA,O;;;cAAfA,e;AAAe,+B;AAAA,oFAFf,CAAC,6DAAD,CAEe,E;AAFA,gB;AAAA,e;AAAA,mO;AAAA;AAAA;ADX5B;;;;AAAM;;;;;;;;;wECaOA,e,EAAe;gBAN3B,uDAM2B;iBANjB;AACTL,oBAAQ,EAAE,QADD;AAETC,uBAAW,EAAE,yBAFJ;AAGTC,qBAAS,EAAE,CAAC,yBAAD,CAHF;AAITe,qBAAS,EAAE,CAAC,6DAAD;AAJF,W;AAMiB,U;;;;;;;;;;;;;;;;;;;;;;;;ACb5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGM;;AACE;;AAAqD;;AAAO;;AAC5D;;AACA;;AACF;;;;;;AAFE;;AAAA;;;;;;;;AAIJ;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;;;;;AAHC;;;;UDFOC,iB;AAKX,qCAAc;AAAA;;AAFd,eAAAC,sBAAA,GAAkC,KAAlC;AAEgB;;;;qCAEL,CAAE;;;qCAEFC,O,EAAuB;AAChC,iBAAKC,QAAL,CAAcC,IAAd,CAAmBF,OAAnB;AACA,iBAAKD,sBAAL,GAA8B,KAA9B;AACD;;;+CAEoB;AACnB,iBAAKA,sBAAL,GAA8B,IAA9B;AACD;;;;;;;yBAhBUD,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,iC;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,0Q;AAAA;AAAA;ACR9B;;AACE;;AACE;;AACE;;AAKF;;AACA;;AAKF;;AACA;;AACE;;AAAQ;AAAA,qBAAS,IAAAK,kBAAA,EAAT;AAA6B,aAA7B;;AACN;;AACF;;AACF;;AACF;;;;AAjByC;;AAAA;;AAQlC;;AAAA;;;;;;;;;wEDHML,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTlB,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;AACnBsB,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AACVH,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AETnB;;AACE;;AAME;;AACE;;AACE;;AAAgB;;AAAkB;;AACpC;;AACA;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;AAhBI;;AAAA;;AAMoB;;AAAA;;AAEE;;AAAA;;AAAyB;;AAGzC;;AAAA;;;;UCFCI,gB,GAIX,0BACUnB,KADV,EAEUoB,cAFV,EAEwC;AAAA;;AAAA;;AAD9B,aAAApB,KAAA,GAAAA,KAAA;AACA,aAAAoB,cAAA,GAAAA,cAAA;AALV,aAAAC,OAAA,GAAyB,EAAzB;AAOE,aAAKrB,KAAL,CAAWE,MAAX,CACGC,IADH,CAEI,iEAAU,iBAAkB;AAAA,cAAfmB,QAAe,SAAfA,QAAe;AAC1B,gBAAI,CAACC,kBAAL,GAA0BD,QAA1B;AACA,iBAAO,MAAI,CAACF,cAAL,CAAoBI,UAApB,CAA+BF,QAA/B,CAAP;AACD,SAHD,CAFJ,EAOGhB,SAPH,CAOa,UAACe,OAAD,EAAa;AACtB,gBAAI,CAACA,OAAL,GAAeA,OAAO,CAACI,GAAR,CAAY,UAAC,EAAD,EAAgC;AAAA,gBAA7BlB,KAA6B,GAAhB,EAAgB,CAA7BA,KAA6B;AAAA,gBAAtBmB,MAAsB,GAAhB,EAAgB,CAAtBA,MAAsB;AAAA,gBAAXlB,IAAW,GAAP,yDAAxB,mBAAwB,CAAO;AAAA,mDACtDA,IADsD,GAClD;AACPD,mBAAK,YAAK,yEAAgBG,SAArB,cAAkCH,KAAlC,CADE;AAEPmB,oBAAM,EAAEA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,GAAjB,IAAwB;AAFzB,aADkD;AAIzD,WAJa,CAAf;AAKD,SAbH;AAcD,O;;;yBAtBUR,gB,EAAgB,+H,EAAA,gI;AAAA,O;;;cAAhBA,gB;AAAgB,gC;AAAA,oFAFhB,CAAC,+DAAD,CAEgB,E;AAFA,gB;AAAA,e;AAAA,sM;AAAA;AAAA;ADX7B;;AACE;;AAoBF;;;;AApB4C;;AAAA;;;;;;;;;wECY/BA,gB,EAAgB;gBAN5B,uDAM4B;iBANlB;AACTzB,oBAAQ,EAAE,SADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD,CAHF;AAITe,qBAAS,EAAE,CAAC,+DAAD;AAJF,W;AAMkB,U;;;;;;;;;;;;;;;;;;;;;;;;ACb7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaiB,iB,GACX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;;AAEpB,aAAAC,UAAA,GAAa,UAACC,OAAD;AAAA,iBACX,MAAI,CAACF,IAAL,CAAUG,IAAV,WACK,yEAAgBC,MADrB,uBAEEF,OAFF,CADW;AAAA,SAAb;AAFwC,O;;;yBAD7BH,iB,EAAiB,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVM,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuBM;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAwB,WAAxB;;AAGA;;AAA4C;;AAAI;;AAClD;;;;;;;;;;;;;;;;;;;;UDpBOC,a,GAUX,uBAAoBC,kBAApB,EAA4D;AAAA;;AAAxC,aAAAA,kBAAA,GAAAA,kBAAA;AAPpB,aAAAC,UAAA,GAAkC,KAAKD,kBAAL,CAC/BE,OAD+B,CACvB,gEAAYC,OADW,EAE/BpC,IAF+B,CAG9B,2DAAI,UAACqC,MAAD;AAAA,iBAAYA,MAAM,CAACC,OAAnB;AAAA,SAAJ,CAH8B,EAI9B,oEAJ8B,CAAlC;AAO8D,O;;;yBAVnDN,a,EAAa,uI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA;AAAA;mFACP,uD,EAAS,K;;;;;;;;;;;;;;ACX5B;;AACE;;;;;;;;AAQE;;AACE;;AACG;;AAAuB;;AAAe;;AAAW;;AAEtD;;AACA;;AACE;;AAAsC;;AAAkB;;AACxD;;AAA2C;;AAAM;;AACjD;;AAA4C;;AAAO;;AACnD;;AAA2C;;AAAI;;AACjD;;AACF;;AACA;;AACE;;AACE;;;;AAQA;;AAAM;;AAAkB;;AAC1B;;AACA;;AAEF;;AACF;;;;AA9BI;;AAAA,iLAA+C,QAA/C,EAA+C,0FAA/C;;AADA;;AAUmB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AASd;;AAAA;;;;;;;;;;wEDjBIA,a,EAAa;gBALzB,uDAKyB;iBALf;AACTzC,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,uBAFJ;AAGTC,qBAAS,EAAE,CAAC,uBAAD;AAHF,W;AAKe,U;;;;;AACI8C,yBAAe;kBAA1C,6DAA0C;mBAA1B,uD;AAA0B;;;;;;;;;;;;;;;;;;;AEX7C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,oBAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,4B;AAAA;AAAA;ACPzB;;AACE;;AACF;;;;;;;;;wEDKaA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTjD,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaiD,a,GACX,uBAAoBhB,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;;AAEpB,aAAAxB,SAAA,GAAY,UAACD,EAAD;AAAA,iBACV,MAAI,CAACyB,IAAL,CACGiB,GADH,WACuB,yEAAgBb,MADvC,sBACyD7B,EADzD,GAEGD,IAFH,CAEQ,UAACM,MAAD;AAAA,mBAAYA,MAAZ;AAAA,WAFR,CADU;AAAA,SAAZ;AAFwC,O;;;yBAD7BoC,a,EAAa,uH;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFZ;;;;;wEAEDA,a,EAAa;gBAHzB,wDAGyB;iBAHd;AACVX,sBAAU,EAAE;AADF,W;AAGcc,CAKA;AAGA;AAQA;AAIA;;;UAqDaa,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAXT,CACT,kFADS,EAET,uEAFS,EAGT;AACEC,iBAAO,EAAE,sEADX;AAEEC,kBAAQ,EAAE,wFAFZ;AAGEC,eAAK,EAAE;AAHT,SAHS,C;AAQV,kBA3BQ,CACP,oEADO,EAEP,uEAFO,EAGP,yFAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP;AACA,yEARO,EASP,yEATO,EAUP,qEAVO,EAWP,gFAXO,EAYP,8EAZO,EAaP,qEAbO,EAcP,uEAdO,EAeP,qEAfO,EAgBP,2EAhBO,EAiBP,2EAjBO,CA2BR;;;;4HAGUH,S,EAAS;AAAA,yBAvClB,2DAuCkB,EAtClB,8FAsCkB,EArClB,sFAqCkB,EApClB,oFAoCkB,EAnClB,iFAmCkB,EAlClB,0EAkCkB,EAjClB,8EAiCkB,EAhClB,yFAgCkB;AAhCD,oBAGjB,oEAHiB,EAIjB,uEAJiB,EAKjB,yFALiB,EAMjB,qEANiB,EAOjB,0DAPiB,EAQjB,kEARiB,EASjB;AACA,2EAViB,EAWjB,yEAXiB,EAYjB,qEAZiB,EAajB,gFAbiB,EAcjB,8EAdiB,EAejB,qEAfiB,EAgBjB,uEAhBiB,EAiBjB,qEAjBiB,EAkBjB,2EAlBiB,EAmBjB,2EAnBiB;AAgCC,S;AAbF,O;;;;;wEAaPA,S,EAAS;gBAzCrB,sDAyCqB;iBAzCZ;AACRI,wBAAY,EAAE,CACZ,2DADY,EAEZ,8FAFY,EAGZ,sFAHY,EAIZ,oFAJY,EAKZ,iFALY,EAMZ,0EANY,EAOZ,8EAPY,EAQZ,yFARY,CADN;AAWRC,mBAAO,EAAE,CACP,oEADO,EAEP,uEAFO,EAGP,yFAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP;AACA,6EARO,EASP,yEATO,EAUP,qEAVO,EAWP,gFAXO,EAYP,8EAZO,EAaP,qEAbO,EAcP,uEAdO,EAeP,qEAfO,EAgBP,2EAhBO,EAiBP,2EAjBO,CAXD;AA8BRzC,qBAAS,EAAE,CACT,kFADS,EAET,uEAFS,EAGT;AACEqC,qBAAO,EAAE,sEADX;AAEEC,sBAAQ,EAAE,wFAFZ;AAGEC,mBAAK,EAAE;AAHT,aAHS,CA9BH;AAuCRG,qBAAS,EAAE,CAAC,2DAAD;AAvCH,W;AAyCY,U;;;;;;;;;;;;;;;;;;ACzEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,c;AAKX,gCACUC,EADV,EAEUnE,WAFV,EAGUoE,MAHV,EAIUC,cAJV,EAIwC;AAAA;;AAH9B,eAAAF,EAAA,GAAAA,EAAA;AACA,eAAAnE,WAAA,GAAAA,WAAA;AACA,eAAAoE,MAAA,GAAAA,MAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AAPV,eAAAC,MAAA,GAAiB,GAAjB;AASE,eAAKC,IAAL,GAAY,KAAKJ,EAAL,CAAQK,KAAR,CAAc;AACxBC,iBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADiB;AAExBC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFc,WAAd,CAAZ;AAID;;;;qCAEU;AAAA;;AACT,iBAAKL,cAAL,CAAoBO,aAApB,CAAkC1D,SAAlC,CAA4C,UAACJ,MAAD,EAAY;AACtD,oBAAI,CAACwD,MAAL,GAAcxD,MAAM,CAAC4C,GAAP,CAAW,QAAX,CAAd;AACD,aAFD;AAGD;;;qCAEU;AAAA;;AACT,iBAAK1D,WAAL,CAAiByE,KAAjB,CAAuB,KAAKF,IAAL,CAAUM,KAAjC,EAAwC3D,SAAxC,CAAkD,UAAC4D,IAAD,EAAU;AAC1D,kBAAI,MAAI,CAACR,MAAL,KAAgB,IAApB,EAA0B;AACxB,sBAAI,CAACF,MAAL,CAAYW,QAAZ,CAAqB,CAAC,MAAI,CAACT,MAAN,CAArB;AACD,eAFD,MAEO;AACL,sBAAI,CAACF,MAAL,CAAYW,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF,aAND;AAOD;;;;;;;yBA/BUb,c,EAAc,2H,EAAA,+H,EAAA,uH,EAAA,+H;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,sX;AAAA;AAAA;ACf3B;;AACE;;AACE;;AACE;;AAAyB;AAAA,qBAAY,IAAAc,QAAA,EAAZ;AAAsB,aAAtB;;AACvB;;AACE;;AAMF;;AACA;;AACE;;AAMF;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAvBY;;AAAA;;;;;;;;;wEDYCd,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT5D,oBAAQ,EAAE,WADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQayE,c,GACX,wBAAoBxC,IAApB,EAAsC;AAAA;;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;;AAEpB,aAAAL,UAAA,GAAa,UAACF,QAAD;AAAA,iBACX,MAAI,CAACO,IAAL,CAAUiB,GAAV,WACK,yEAAgBb,MADrB,sBACuCX,QAAQ,IAAI,EADnD,EADW;AAAA,SAAb;AAFwC,O;;;yBAD7B+C,c,EAAc,uH;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACVnC,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;ACP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaoC,W;AAGX,6BAAoBzC,IAApB,EAA8C2B,MAA9C,EAA8D;AAAA;;AAA1C,eAAA3B,IAAA,GAAAA,IAAA;AAA0B,eAAA2B,MAAA,GAAAA,MAAA;AAC5C,eAAKe,UAAL,GAAkB,CAAC,CAAC,KAAKC,QAAL,EAApB;AACD;;;;uCAE4D;AAAA;;AAAA,gBAArDX,MAAqD,SAArDA,KAAqD;AAAA,gBAA9CE,QAA8C,SAA9CA,QAA8C;;AAC3D,gBAAI,CAACF,MAAD,IAAU,CAACE,QAAf,EAAyB;AACvB;AACD;;AAED,mBAAO,KAAKlC,IAAL,CACJG,IADI,WACuB,gFAAgBC,MADvC,mBAC6D;AAChE4B,mBAAK,EAALA,MADgE;AAEhEE,sBAAQ,EAARA;AAFgE,aAD7D,EAKJ5D,IALI,CAMH,2DAAI,UAACsE,QAAD,EAAc;AAChB,oBAAI,CAACC,QAAL,CAAcD,QAAQ,CAACE,KAAvB;;AACA,oBAAI,CAACJ,UAAL,GAAkB,IAAlB;AACA,qBAAO,gDAAG,MAAI,CAACA,UAAR,CAAP;AACD,aAJD,CANG,CAAP,CAL2D,CAkB3D;AACD;;;2CAEa;AACZ,mBAAO,KAAKA,UAAZ;AACD;;;qCAEUb,M,EAAc;AACvB,iBAAKa,UAAL,GAAkB,KAAlB;AACA,iBAAKf,MAAL,CAAYW,QAAZ,CAAqB,CAAC,OAAD,CAArB,EAAgC;AAC9BS,yBAAW,EAAE;AAAElB,sBAAM,EAANA;AAAF;AADiB,aAAhC;AAGD;;;qCAEU;AACT,mBAAOmB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD;;;mCAEQH,K,EAAO;AACdE,wBAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,KAA9B;AACD;;;;;;;yBA7CUL,W,EAAW,uH,EAAA,8G;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW;;;;;wEAAXA,W,EAAW;gBADvB;AACuB,U;;;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;;UAAaU,e;;;;AACG,sBAAA/C,MAAA,GAAiB,2BAAjB;AACA,sBAAAvB,SAAA,GAAoB,2BAApB;AACA,sBAAAuE,QAAA,GAAmB,UAAnB;;;;;;;;;;;;;;;;ACHhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaC,mB;AAMX,qCACU3B,EADV,EAEU4B,iBAFV,EAE8C;AAAA;;AADpC,eAAA5B,EAAA,GAAAA,EAAA;AACA,eAAA4B,iBAAA,GAAAA,iBAAA;AANA,eAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AAQR,eAAKzB,IAAL,GAAY,KAAKJ,EAAL,CAAQK,KAAR,CAAc;AACxByB,mBAAO,EAAE,CAAC,EAAD,EAAK,0DAAWvB,QAAhB;AADe,WAAd,CAAZ;AAGD;;;;qCAEU;AAAA;;AACT,iBAAKqB,iBAAL,CACGrD,UADH,CACc,MAAD,OAAC,CAAD;AAAGwD,uBAAS,EAAE,KAAKpE,QAAL,CAAcqE,QAAd;AAAd,aAAC,EAA0C,KAAK5B,IAAL,CAAUM,KAApD,CADd,EAEG3D,SAFH,CAEa,UAACkF,UAAD,EAAgB;AACzB,oBAAI,CAACJ,eAAL,CAAqBK,IAArB,CAA0BD,UAA1B;AACD,aAJH;AAKD;;;;;;;yBArBUN,mB,EAAmB,2H,EAAA,uI;AAAA,O;;;cAAnBA,mB;AAAmB,oC;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,oFAFnB,CAAC,sEAAD,CAEmB,E;AAFA,gB;AAAA,e;AAAA,0P;AAAA;AAAA;ACThC;;AAAyB;AAAA,qBAAY,IAAAd,QAAA,EAAZ;AAAsB,aAAtB;;AACvB;;AACE;;AAAW;;AAA0B;;AACrC;;AAKF;;AACA;;AAAwD;;AAAM;;AAChE;;;;AAVM;;;;;;;;;wEDWOc,mB,EAAmB;gBAN/B,uDAM+B;iBANrB;AACTxF,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD,CAHF;AAITe,qBAAS,EAAE,CAAC,sEAAD;AAJF,W;AAMqB,U;;;;;;;AACrBO,kBAAQ,EAAE,CAAF;kBAAhB;AAAgB,WAAE,C;AACTkE,yBAAe;kBAAxB;AAAwB;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,UAAMM,MAAM,GAAW,CACrB;AACElG,YAAI,EAAE,OADR;AAEEmG,iBAAS,EAAE;AAFb,OADqB,EAKrB;AACEnG,YAAI,EAAE,EADR;AAEEmG,iBAAS,EAAE,0EAFb;AAGEC,mBAAW,EAAE,CAAC,iFAAD,CAHf;AAIEC,gBAAQ,EAAE,CACR;AACErG,cAAI,EAAE,WADR;AAEEmG,mBAAS,EAAE;AAFb,SADQ,EAKR;AACEnG,cAAI,EAAE,eADR;AAEEmG,mBAAS,EAAE,gFAFb;AAGEzB,cAAI,EAAE;AAAEtB,iBAAK,EAAE;AAAT;AAHR,SALQ,EAUR;AACEpD,cAAI,EAAE,EADR;AAEEmG,mBAAS,EAAE,mFAFb;AAGEzB,cAAI,EAAE;AAAEtB,iBAAK,EAAE;AAAT;AAHR,SAVQ;AAJZ,OALqB,EA0BrB;AACEpD,YAAI,EAAE,IADR;AAEEmG,iBAAS,EAAE;AAFb,OA1BqB,CAAvB;;UA0CaG,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,mBAPhB,CACT;AACE9C,iBAAO,EAAE,6DADX;AAEE+C,kBAAQ,EAAE,yEAAgBd;AAF5B,SADS,C;AAKV,kBAPQ,CAAC,6DAAae,OAAb,CAAqBN,MAArB,EAA6B;AAAEO,gCAAsB,EAAE;AAA1B,SAA7B,CAAD,CAOR,EANS,4DAMT;;;;4HAEUH,gB,EAAgB;AAAA;AAAA,oBARjB,4DAQiB;AAAA,S;AARL,O;;;;;wEAQXA,gB,EAAgB;gBAV5B,sDAU4B;iBAVnB;AACR1C,mBAAO,EAAE,CAAC,6DAAa4C,OAAb,CAAqBN,MAArB,EAA6B;AAAEO,oCAAsB,EAAE;AAA1B,aAA7B,CAAD,CADD;AAERC,mBAAO,EAAE,CAAC,4DAAD,CAFD;AAGRvF,qBAAS,EAAE,CACT;AACEqC,qBAAO,EAAE,6DADX;AAEE+C,sBAAQ,EAAE,yEAAgBd;AAF5B,aADS;AAHH,W;AAUmB,U;;;;;;;;;;;;;;;;;;ACrD7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaakB,mB;AACX,qCAAoB/G,WAApB,EAAsDC,QAAtD,EAA0E;AAAA;;AAAtD,eAAAD,WAAA,GAAAA,WAAA;AAAkC,eAAAC,QAAA,GAAAA,QAAA;AAAsB;;;;oCAG1E+G,O,EACAC,I,EAAiB;AAAA;;AAEjB,gBAAMC,WAAW,GAAGF,OAAO,CAACG,KAAR,CAAc;AAChCC,wBAAU,EAAE;AACVC,6BAAa,mBAAY,KAAKrH,WAAL,CAAiBoF,QAAjB,EAAZ;AADH;AADoB,aAAd,CAApB;AAKA,mBAAO6B,IAAI,CAACK,MAAL,CAAYJ,WAAZ,EAAyBnG,IAAzB,CACL,kEAAW,UAACwG,KAAD,EAAW;AACpB,kBAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;AACxB,uBAAI,CAACxH,WAAL,CAAiBG,UAAjB,CAA4B,OAAI,CAACF,QAAL,CAAcG,IAAd,EAA5B;AACD;;AACD,oBAAMmH,KAAN;AACD,aALD,CADK,CAAP;AAQD;;;;;;;yBApBUR,mB,EAAmB,iH,EAAA,gH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB;;;;;wEAAnBA,mB,EAAmB;gBAD/B;AAC+B,U;;;;;;;;;;;;;;;;;;;;;;;;ACbhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYrG,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB+G,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACJ,KAAR,CAAcG,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASE,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACvB,OAAP,GAAiBc,wBAAjB;AACAA,8BAAwB,CAAC5G,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { CanActivate, UrlTree } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private authService: AuthService, private location: Location) {}\n\n  canActivate(): boolean | UrlTree {\n    if (!this.authService.isUserLoggedIn()) {\n      this.authService.logoutUser(this.location.path());\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"recipe\">\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"header\">\n        <mat-card-title class=\"title\">{{ recipe.title }}</mat-card-title>\n        <img src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" class=\"image\" />\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"card\">\n        <mat-card-content>\n          <p class=\"subheader\">Składniki</p>\n          <p class=\"text\">\n            {{ recipe.ingredients }}\n          </p>\n          <p class=\"subheader\">Wykonanie</p>\n          <p class=\"text\">\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <comments [recipeId]=\"recipe.id\" [comments]=\"recipe.comments\"></comments>\n    </div>\n  </div>\n</div>\n","import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipeService } from \"./recipe.service\";\n\n@Component({\n  selector: \"recipe\",\n  templateUrl: \"./recipe.component.html\",\n  styleUrls: [\"./recipe.component.scss\"],\n  providers: [RecipeService],\n})\nexport class RecipeComponent implements OnInit {\n  recipe: RecipeModel;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService\n  ) {\n    this.route.params\n      .pipe(switchMap(({ id }) => this.recipeService.getRecipe(id)))\n      .subscribe(({ image, ...rest }) => {\n        this.recipe = {\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n        };\n      });\n  }\n\n  ngOnInit() {}\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Comment as CommentModel } from \"../../model/comment\";\n\n@Component({\n  selector: \"comments\",\n  templateUrl: \"./comments.component.html\",\n  styleUrls: [\"./comments.component.scss\"],\n})\nexport class CommentsComponent implements OnInit {\n  @Input() recipeId: string;\n  @Input() comments: CommentModel[];\n  isCommentAddFormOpened: boolean = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  addComment(comment: CommentModel) {\n    this.comments.push(comment);\n    this.isCommentAddFormOpened = false;\n  }\n\n  openCommentAddForm() {\n    this.isCommentAddFormOpened = true;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <mat-list class=\"list\">\n      <mat-list-item *ngFor=\"let comment of comments; index as i\">\n        <mat-icon mat-list-icon class=\"icon\" color=\"primary\">comment</mat-icon>\n        {{ comment.content }}\n        <mat-divider></mat-divider>\n      </mat-list-item>\n    </mat-list>\n    <comment-add\n      [recipeId]=\"recipeId\"\n      *ngIf=\"isCommentAddFormOpened\"\n      (addCommentEvent)=\"addComment($event)\"\n    ></comment-add>\n  </mat-card-content>\n  <mat-card-actions class=\"actions\">\n    <button (click)=\"openCommentAddForm()\" mat-raised-button color=\"primary\">\n      Dodaj komentarz\n    </button>\n  </mat-card-actions>\n</mat-card>\n","<div class=\"grid-container\">\n  <div class=\"grid-item\" *ngFor=\"let recipe of recipes; index as i\">\n    <a\n      mat-list-item\n      [routerLink]=\"\n        categoryRouteParam ? [recipe.id] : [recipe.categoryName, recipe.id]\n      \"\n    >\n      <mat-card class=\"card\">\n        <mat-card-header>\n          <mat-card-title>{{ recipe.title }}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" />\n        <mat-card-content>\n          <p>\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </a>\n  </div>\n</div>\n","import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipesService } from \"./recipes.service\";\n\n@Component({\n  selector: \"recipes\",\n  templateUrl: \"./recipes.component.html\",\n  styleUrls: [\"./recipes.component.scss\"],\n  providers: [RecipesService],\n})\nexport class RecipesComponent {\n  recipes: RecipeModel[] = [];\n  categoryRouteParam?: RecipeModel[\"categoryName\"];\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipesService: RecipesService\n  ) {\n    this.route.params\n      .pipe(\n        switchMap(({ category }) => {\n          this.categoryRouteParam = category;\n          return this.recipesService.getRecipes(category);\n        })\n      )\n      .subscribe((recipes) => {\n        this.recipes = recipes.map(({ image, method, ...rest }) => ({\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n          method: method.substr(0, 250) + \"...\",\n        }));\n      });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Comment } from \"../../model/comment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommentAddService {\n  constructor(private http: HttpClient) {}\n\n  addComment = (payload: Pick<Comment, \"id_recipe\" | \"content\">) =>\n    this.http.post<Comment>(\n      `${GlobalConstants.apiURL}/comments/create`,\n      payload\n    );\n}\n","import { Component, ContentChildren } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-menu\",\n  templateUrl: \"./menu.component.html\",\n  styleUrls: [\"./menu.component.scss\"],\n})\nexport class MenuComponent {\n  @ContentChildren(Component) contentChildren;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar class=\"toolbar\">\n      <a mat-list-item routerLink=\"/\"\n        ><mat-icon class=\"icon\">restaurant_menu</mat-icon></a\n      >\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/']\">Wszystkie przepisy</a>\n      <a mat-list-item [routerLink]=\"['/cakes']\">Ciasta</a>\n      <a mat-list-item [routerLink]=\"['/salads']\">Sałatki</a>\n      <a mat-list-item [routerLink]=\"['/soups']\">Zupy</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"content\">\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Przepisy kulinarne</span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n    <!-- <ng-content></ng-content> -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"Przepisy kulinarne\";\n}\n","<div class=\"app\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipeService {\n  constructor(private http: HttpClient) {}\n\n  getRecipe = (id: string) =>\n    this.http\n      .get<RecipeModel>(`${GlobalConstants.apiURL}/recipes/${id}`)\n      .pipe((recipe) => recipe);\n}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\n// app\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n// components\nimport { MenuComponent } from \"./modules/menu/menu.component\";\nimport { CommentAddComponent } from \"./modules/comment-add/comment-add.component\";\nimport { CommentsComponent } from \"./modules/comments/comments.component\";\nimport { LoginComponent } from \"./modules/login/login.component\";\nimport { RecipesComponent } from \"./modules/recipes/recipes.component\";\nimport { RecipeComponent } from \"./modules/recipe/recipe.component\";\nimport { NotFoundComponent } from \"./modules/not-found/not-found.component\";\n// auth\nimport { AuthGuardService } from \"./modules/auth/auth-guard.service\";\nimport { AuthService } from \"./modules/auth/auth.service\";\nimport { HttpAuthInterceptor } from \"./modules/auth/http-auth.interceptor\";\n// material\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentAddComponent,\n    CommentsComponent,\n    RecipesComponent,\n    RecipeComponent,\n    MenuComponent,\n    LoginComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // material modules\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n  ],\n  providers: [\n    AuthGuardService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpAuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from \"../auth/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  invalidCredentialMsg: string;\n  retUrl: string = \"/\";\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.form = this.fb.group({\n      login: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParamMap.subscribe((params) => {\n      this.retUrl = params.get(\"retUrl\");\n    });\n  }\n\n  onSubmit() {\n    this.authService.login(this.form.value).subscribe((data) => {\n      if (this.retUrl !== null) {\n        this.router.navigate([this.retUrl]);\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <mat-card class=\"card\">\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            type=\"text\"\n            formControlName=\"login\"\n            matInput\n            placeholder=\"login\"\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            formControlName=\"password\"\n            matInput\n            placeholder=\"hasło\"\n            type=\"password\"\n          />\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button color=\"primary\">\n          Zloguj się\n        </button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipesService {\n  constructor(private http: HttpClient) {}\n\n  getRecipes = (category?: RecipeModel[\"categoryName\"]) =>\n    this.http.get<RecipeModel[]>(\n      `${GlobalConstants.apiURL}/recipes/${category || \"\"}`\n    );\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"src/app/common/global-constants\";\nimport { User } from \"src/app/model/user\";\n\n@Injectable()\nexport class AuthService {\n  private isloggedIn: boolean;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.isloggedIn = !!this.getToken();\n  }\n\n  login({ login, password }: Pick<User, \"login\" | \"password\">) {\n    if (!login || !password) {\n      return;\n    }\n\n    return this.http\n      .post<{ token: string }>(`${GlobalConstants.apiURL}/users/login`, {\n        login,\n        password,\n      })\n      .pipe(\n        tap((response) => {\n          this.setToken(response.token);\n          this.isloggedIn = true;\n          return of(this.isloggedIn);\n        })\n      );\n\n    // return of(this.isloggedIn);\n  }\n\n  isUserLoggedIn(): boolean {\n    return this.isloggedIn;\n  }\n\n  logoutUser(retUrl: string): void {\n    this.isloggedIn = false;\n    this.router.navigate([\"login\"], {\n      queryParams: { retUrl },\n    });\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  // isAdminUser(): boolean {\n  //   if (this.login == \"Admin\") {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n}\n","export class GlobalConstants {\n  public static apiURL: string = \"http://localhost:8080/api\";\n  public static imagesURL: string = \"http://localhost:8080/img\";\n  public static baseHref: string = \"/recipes\";\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Comment } from \"../../model/comment\";\nimport { CommentAddService } from \"./comment-add.service\";\n\n@Component({\n  selector: \"comment-add\",\n  templateUrl: \"./comment-add.component.html\",\n  styleUrls: [\"./comment-add.component.scss\"],\n  providers: [CommentAddService],\n})\nexport class CommentAddComponent {\n  @Input() recipeId: string;\n  @Output() addCommentEvent = new EventEmitter<Comment>();\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private commentAddService: CommentAddService\n  ) {\n    this.form = this.fb.group({\n      content: [\"\", Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.commentAddService\n      .addComment({ id_recipe: this.recipeId.toString(), ...this.form.value })\n      .subscribe((newComment) => {\n        this.addCommentEvent.emit(newComment);\n      });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field appearance=\"outline\" class=\"full-width\">\n    <mat-label>Wpisz tutaj swój komentarz</mat-label>\n    <textarea\n      formControlName=\"content\"\n      matInput\n      placeholder=\"Miejsce na Twój komentarz\"\n    ></textarea>\n  </mat-form-field>\n  <button type=\"submit\" mat-raised-button color=\"primary\">Zapisz</button>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport { LoginComponent } from \"./modules/login/login.component\";\nimport { RecipesComponent } from \"./modules/recipes/recipes.component\";\nimport { RecipeComponent } from \"./modules/recipe/recipe.component\";\nimport { GlobalConstants } from \"./common/global-constants\";\nimport { AuthGuardService } from \"./modules/auth/auth-guard.service\";\nimport { MenuComponent } from \"./modules/menu/menu.component\";\nimport { NotFoundComponent } from \"./modules/not-found/not-found.component\";\n\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"\",\n    component: MenuComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: \":category\",\n        component: RecipesComponent,\n      },\n      {\n        path: \":category/:id\",\n        component: RecipeComponent,\n        data: { title: \"Przepis\" },\n      },\n      {\n        path: \"\",\n        component: RecipesComponent,\n        data: { title: \"Przepisy kulinarne\" },\n      },\n    ],\n  },\n  {\n    path: \"**\",\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: APP_BASE_HREF,\n      useValue: GlobalConstants.baseHref,\n    },\n  ],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from \"@angular/common/http\";\nimport { Location } from \"@angular/common\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class HttpAuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private location: Location) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`,\n      },\n    });\n    return next.handle(authRequest).pipe(\n      catchError((error) => {\n        if (error.status === 401) {\n          this.authService.logoutUser(this.location.path());\n        }\n        throw error;\n      })\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}