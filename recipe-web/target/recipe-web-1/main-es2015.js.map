{"version":3,"sources":["./src/environments/environment.ts","./src/app/modules/recipe/recipe.component.ts","./src/app/modules/recipe/recipe.component.html","./src/app/modules/comments/comments.component.ts","./src/app/modules/comments/comments.component.html","./src/app/modules/recipes/recipes.component.ts","./src/app/modules/recipes/recipes.component.html","./src/app/modules/comment-add/comment-add.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/recipe/recipe.service.ts","./src/app/app.module.ts","./src/app/modules/recipes/recipes.service.ts","./src/app/layout/menu/menu.component.ts","./src/app/layout/menu/menu.component.html","./src/app/common/global-constants.ts","./src/app/modules/comment-add/comment-add.component.ts","./src/app/modules/comment-add/comment-add.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipeService } from \"./recipe.service\";\n\n@Component({\n  selector: \"recipe\",\n  templateUrl: \"./recipe.component.html\",\n  styleUrls: [\"./recipe.component.scss\"],\n})\nexport class Recipe implements OnInit {\n  recipe: RecipeModel;\n\n  constructor(private route: ActivatedRoute, recipeService: RecipeService) {\n    this.route.params\n      .pipe(switchMap(({ id }) => recipeService.getRecipe(id)))\n      .subscribe(({ image, ...rest }) => {\n        this.recipe = {\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n        };\n      });\n  }\n\n  ngOnInit() {}\n}\n","<div *ngIf=\"recipe\">\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"header\">\n        <mat-card-title class=\"title\">{{ recipe.title }}</mat-card-title>\n        <img src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" class=\"image\" />\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"card\">\n        <mat-card-content>\n          <p class=\"subheader\">Składniki</p>\n          <p class=\"text\">\n            {{ recipe.ingredients }}\n          </p>\n          <p class=\"subheader\">Wykonanie</p>\n          <p class=\"text\">\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <comments [recipeId]=\"recipe.id\" [comments]=\"recipe.comments\"></comments>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Comment as CommentModel } from \"../../model/comment\";\n\n@Component({\n  selector: \"comments\",\n  templateUrl: \"./comments.component.html\",\n  styleUrls: [\"./comments.component.scss\"],\n})\nexport class Comments implements OnInit {\n  @Input() recipeId: string;\n  @Input() comments: CommentModel[];\n  isCommentAddFormOpened: boolean = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  addComment(comment: CommentModel) {\n    this.comments.push(comment);\n    this.isCommentAddFormOpened = false;\n  }\n\n  openCommentAddForm() {\n    this.isCommentAddFormOpened = true;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <mat-list class=\"list\">\n      <mat-list-item *ngFor=\"let comment of comments; index as i\">\n        <mat-icon mat-list-icon class=\"icon\" color=\"primary\">comment</mat-icon>\n        {{ comment.content }}\n        <mat-divider></mat-divider>\n      </mat-list-item>\n    </mat-list>\n    <comment-add\n      [recipeId]=\"recipeId\"\n      *ngIf=\"isCommentAddFormOpened\"\n      (addCommentEvent)=\"addComment($event)\"\n    ></comment-add>\n  </mat-card-content>\n  <mat-card-actions class=\"actions\">\n    <button (click)=\"openCommentAddForm()\" mat-raised-button color=\"primary\">\n      Dodaj komentarz\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipesService } from \"./recipes.service\";\n\n@Component({\n  selector: \"recipes\",\n  templateUrl: \"./recipes.component.html\",\n  styleUrls: [\"./recipes.component.scss\"],\n})\nexport class Recipes {\n  recipes: RecipeModel[] = [];\n  categoryRouteParam?: RecipeModel[\"categoryName\"];\n\n  constructor(private route: ActivatedRoute, recipesService: RecipesService) {\n    this.route.params\n      .pipe(\n        switchMap(({ category }) => {\n          this.categoryRouteParam = category;\n          return recipesService.getRecipes(category);\n        })\n      )\n      .subscribe((recipes) => {\n        this.recipes = recipes.map(({ image, method, ...rest }) => ({\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n          method: method.substr(0, 250) + \"...\",\n        }));\n      });\n  }\n}\n","<div class=\"grid-container\">\n  <div class=\"grid-item\" *ngFor=\"let recipe of recipes; index as i\">\n    <a\n      mat-list-item\n      [routerLink]=\"\n        categoryRouteParam ? [recipe.id] : [recipe.categoryName, recipe.id]\n      \"\n    >\n      <mat-card class=\"card\">\n        <mat-card-header>\n          <mat-card-title>{{ recipe.title }}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" />\n        <mat-card-content>\n          <p>\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </a>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Comment } from \"../../model/comment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommentAddService {\n  constructor(private http: HttpClient) {}\n\n  addComment = (payload: Pick<Comment, \"id_recipe\" | \"content\">) =>\n    this.http.post<Comment>(\n      `${GlobalConstants.apiURL}/comments/create`,\n      payload\n    );\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"Przepisy kulinarne\";\n}\n","<app-menu>\n  <div>\n    <router-outlet></router-outlet>\n  </div>\n</app-menu>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipeService {\n  constructor(private http: HttpClient) {}\n\n  getRecipe = (id: string) =>\n    this.http\n      .get<RecipeModel>(`${GlobalConstants.apiURL}/recipes/${id}`)\n      .pipe((recipe) => recipe);\n}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppRoutingModule } from \"./app-routing.module\";\n// components\nimport { AppComponent } from \"./app.component\";\nimport { MenuComponent } from \"./layout/menu/menu.component\";\n// modules\nimport { CommentAdd } from \"./modules/comment-add/comment-add.component\";\nimport { Comments } from \"./modules/comments/comments.component\";\nimport { Recipes } from \"./modules/recipes/recipes.component\";\nimport { Recipe } from \"./modules/recipe/recipe.component\";\n// material\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentAdd,\n    Comments,\n    Recipes,\n    Recipe,\n    MenuComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // material modules\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipesService {\n  constructor(private http: HttpClient) {}\n\n  getRecipes = (category?: RecipeModel[\"categoryName\"]) =>\n    this.http.get<RecipeModel[]>(\n      `${GlobalConstants.apiURL}/recipes/${category || \"\"}`\n    );\n}\n","import { Component, ContentChildren } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-menu\",\n  templateUrl: \"./menu.component.html\",\n  styleUrls: [\"./menu.component.scss\"],\n})\nexport class MenuComponent {\n  @ContentChildren(Component) contentChildren;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar class=\"toolbar\">\n      <a mat-list-item routerLink=\"/\"\n        ><mat-icon class=\"icon\">restaurant_menu</mat-icon></a\n      >\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"/\">Wszystkie przepisy</a>\n      <a mat-list-item routerLink=\"/cakes\">Ciasta</a>\n      <a mat-list-item routerLink=\"/salads\">Sałatki</a>\n      <a mat-list-item routerLink=\"/soups\">Zupy</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Przepisy kulinarne</span>\n    </mat-toolbar>\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","export class GlobalConstants {\n  public static apiURL: string = \"http://localhost:8080/api\";\n  public static imagesURL: string = \"http://localhost:8080/img\";\n  public static baseHref: string = \"/recipes\";\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { CommentAddService } from \"./comment-add.service\";\nimport { Comment } from \"../../model/comment\";\n\n@Component({\n  selector: \"comment-add\",\n  templateUrl: \"./comment-add.component.html\",\n  styleUrls: [\"./comment-add.component.scss\"],\n})\nexport class CommentAdd {\n  @Input() recipeId: string;\n  @Output() addCommentEvent = new EventEmitter<Comment>();\n\n  form: FormGroup;\n  commentAddService: CommentAddService;\n\n  constructor(fb: FormBuilder, commentAddService: CommentAddService) {\n    this.form = fb.group({\n      content: [\"\", Validators.required],\n    });\n    this.commentAddService = commentAddService;\n  }\n\n  onSubmit() {\n    this.commentAddService\n      .addComment({ id_recipe: this.recipeId.toString(), ...this.form.value })\n      .subscribe((newComment) => {\n        this.addCommentEvent.emit(newComment);\n      });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field appearance=\"outline\" class=\"full-width\">\n    <mat-label>Wpisz tutaj swój komentarz</mat-label>\n    <textarea\n      formControlName=\"content\"\n      matInput\n      placeholder=\"Miejsce na Twój komentarz\"\n    ></textarea>\n  </mat-form-field>\n  <button type=\"submit\" mat-raised-button color=\"primary\">Zapisz</button>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport { Recipes } from \"./modules/recipes/recipes.component\";\nimport { Recipe } from \"./modules/recipe/recipe.component\";\nimport { GlobalConstants } from \"./common/global-constants\";\n\nconst routes: Routes = [\n  {\n    path: \":category/:id\",\n    component: Recipe,\n    data: { title: \"Przepis\" },\n  },\n  {\n    path: \":category\",\n    component: Recipes,\n  },\n  {\n    path: \"\",\n    component: Recipes,\n    data: { title: \"Przepisy kulinarne\" },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\n  exports: [RouterModule],\n  providers: [{ provide: APP_BASE_HREF, useValue: GlobalConstants.baseHref }],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}