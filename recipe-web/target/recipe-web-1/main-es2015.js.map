{"version":3,"sources":["./src/app/modules/auth/auth-guard.service.ts","./src/app/modules/not-found/not-found.component.ts","./src/app/modules/not-found/not-found.component.html","./src/environments/environment.ts","./src/app/modules/recipe/recipe.component.ts","./src/app/modules/recipe/recipe.component.html","./src/app/modules/comments/comments.component.ts","./src/app/modules/comments/comments.component.html","./src/app/modules/recipes/recipes.component.ts","./src/app/modules/recipes/recipes.component.html","./src/app/modules/comment-add/comment-add.service.ts","./src/app/modules/menu/menu.component.ts","./src/app/modules/menu/menu.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/recipe/recipe.service.ts","./src/app/app.module.ts","./src/app/modules/login/login.component.ts","./src/app/modules/login/login.component.html","./src/app/modules/recipes/recipes.service.ts","./src/app/modules/auth/auth.service.ts","./src/app/common/global-constants.ts","./src/app/modules/comment-add/comment-add.component.ts","./src/app/modules/comment-add/comment-add.component.html","./src/app/app-routing.module.ts","./src/app/modules/auth/http-auth.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\nimport { CanActivate, UrlTree } from \"@angular/router\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private authService: AuthService, private location: Location) {}\n\n  canActivate(): boolean | UrlTree {\n    if (!this.authService.isUserLoggedIn()) {\n      this.authService.logoutUser(this.location.path());\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipeService } from \"./recipe.service\";\n\n@Component({\n  selector: \"recipe\",\n  templateUrl: \"./recipe.component.html\",\n  styleUrls: [\"./recipe.component.scss\"],\n  providers: [RecipeService],\n})\nexport class RecipeComponent implements OnInit {\n  recipe: RecipeModel;\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipeService: RecipeService\n  ) {\n    this.route.params\n      .pipe(switchMap(({ id }) => this.recipeService.getRecipe(id)))\n      .subscribe(({ image, ...rest }) => {\n        this.recipe = {\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n        };\n      });\n  }\n\n  ngOnInit() {}\n}\n","<div *ngIf=\"recipe\">\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"header\">\n        <mat-card-title class=\"title\">{{ recipe.title }}</mat-card-title>\n        <img src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" class=\"image\" />\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <mat-card class=\"card\">\n        <mat-card-content>\n          <p class=\"subheader\">Składniki</p>\n          <p class=\"text\">\n            {{ recipe.ingredients }}\n          </p>\n          <p class=\"subheader\">Wykonanie</p>\n          <p class=\"text\">\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <div class=\"grid-container\">\n    <div class=\"grid-item grid-item__colspan-4\">\n      <comments [recipeId]=\"recipe.id\" [comments]=\"recipe.comments\"></comments>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Comment as CommentModel } from \"../../model/comment\";\n\n@Component({\n  selector: \"comments\",\n  templateUrl: \"./comments.component.html\",\n  styleUrls: [\"./comments.component.scss\"],\n})\nexport class CommentsComponent implements OnInit {\n  @Input() recipeId: string;\n  @Input() comments: CommentModel[];\n  isCommentAddFormOpened: boolean = false;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  addComment(comment: CommentModel) {\n    this.comments.push(comment);\n    this.isCommentAddFormOpened = false;\n  }\n\n  openCommentAddForm() {\n    this.isCommentAddFormOpened = true;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <mat-list class=\"list\">\n      <mat-list-item *ngFor=\"let comment of comments; index as i\">\n        <mat-icon mat-list-icon class=\"icon\" color=\"primary\">comment</mat-icon>\n        {{ comment.content }}\n        <mat-divider></mat-divider>\n      </mat-list-item>\n    </mat-list>\n    <comment-add\n      [recipeId]=\"recipeId\"\n      *ngIf=\"isCommentAddFormOpened\"\n      (addCommentEvent)=\"addComment($event)\"\n    ></comment-add>\n  </mat-card-content>\n  <mat-card-actions class=\"actions\">\n    <button (click)=\"openCommentAddForm()\" mat-raised-button color=\"primary\">\n      Dodaj komentarz\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { switchMap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\nimport { RecipesService } from \"./recipes.service\";\n\n@Component({\n  selector: \"recipes\",\n  templateUrl: \"./recipes.component.html\",\n  styleUrls: [\"./recipes.component.scss\"],\n  providers: [RecipesService],\n})\nexport class RecipesComponent {\n  recipes: RecipeModel[] = [];\n  categoryRouteParam?: RecipeModel[\"categoryName\"];\n\n  constructor(\n    private route: ActivatedRoute,\n    private recipesService: RecipesService\n  ) {\n    this.route.params\n      .pipe(\n        switchMap(({ category }) => {\n          this.categoryRouteParam = category;\n          return this.recipesService.getRecipes(category);\n        })\n      )\n      .subscribe((recipes) => {\n        this.recipes = recipes.map(({ image, method, ...rest }) => ({\n          ...rest,\n          image: `${GlobalConstants.imagesURL}/${image}`,\n          method: method.substr(0, 250) + \"...\",\n        }));\n      });\n  }\n}\n","<div class=\"grid-container\">\n  <div class=\"grid-item\" *ngFor=\"let recipe of recipes; index as i\">\n    <a\n      mat-list-item\n      [routerLink]=\"\n        categoryRouteParam ? [recipe.id] : [recipe.categoryName, recipe.id]\n      \"\n    >\n      <mat-card class=\"card\">\n        <mat-card-header>\n          <mat-card-title>{{ recipe.title }}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image src=\"{{ recipe.image }}\" alt=\"{{ recipe.title }}\" />\n        <mat-card-content>\n          <p>\n            {{ recipe.method }}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </a>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Comment } from \"../../model/comment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CommentAddService {\n  constructor(private http: HttpClient) {}\n\n  addComment = (payload: Pick<Comment, \"id_recipe\" | \"content\">) =>\n    this.http.post<Comment>(\n      `${GlobalConstants.apiURL}/comments/create`,\n      payload\n    );\n}\n","import { Component, ContentChildren } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-menu\",\n  templateUrl: \"./menu.component.html\",\n  styleUrls: [\"./menu.component.scss\"],\n})\nexport class MenuComponent {\n  @ContentChildren(Component) contentChildren;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map((result) => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n  >\n    <mat-toolbar class=\"toolbar\">\n      <a mat-list-item routerLink=\"/\"\n        ><mat-icon class=\"icon\">restaurant_menu</mat-icon></a\n      >\n    </mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"['/']\">Wszystkie przepisy</a>\n      <a mat-list-item [routerLink]=\"['/cakes']\">Ciasta</a>\n      <a mat-list-item [routerLink]=\"['/salads']\">Sałatki</a>\n      <a mat-list-item [routerLink]=\"['/soups']\">Zupy</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"content\">\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Przepisy kulinarne</span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n    <!-- <ng-content></ng-content> -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  title = \"Przepisy kulinarne\";\n}\n","<div class=\"app\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipeService {\n  constructor(private http: HttpClient) {}\n\n  getRecipe = (id: string) =>\n    this.http\n      .get<RecipeModel>(`${GlobalConstants.apiURL}/recipes/${id}`)\n      .pipe((recipe) => recipe);\n}\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\n// app\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\n// components\nimport { MenuComponent } from \"./modules/menu/menu.component\";\nimport { CommentAddComponent } from \"./modules/comment-add/comment-add.component\";\nimport { CommentsComponent } from \"./modules/comments/comments.component\";\nimport { LoginComponent } from \"./modules/login/login.component\";\nimport { RecipesComponent } from \"./modules/recipes/recipes.component\";\nimport { RecipeComponent } from \"./modules/recipe/recipe.component\";\nimport { NotFoundComponent } from \"./modules/not-found/not-found.component\";\n// auth\nimport { AuthGuardService } from \"./modules/auth/auth-guard.service\";\nimport { AuthService } from \"./modules/auth/auth.service\";\nimport { HttpAuthInterceptor } from \"./modules/auth/http-auth.interceptor\";\n// material\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentAddComponent,\n    CommentsComponent,\n    RecipesComponent,\n    RecipeComponent,\n    MenuComponent,\n    LoginComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // material modules\n    LayoutModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n  ],\n  providers: [\n    AuthGuardService,\n    AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpAuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from \"../auth/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  invalidCredentialMsg: string;\n  retUrl: string = \"/\";\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.form = this.fb.group({\n      login: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    this.activatedRoute.queryParamMap.subscribe((params) => {\n      this.retUrl = params.get(\"retUrl\");\n    });\n  }\n\n  onSubmit() {\n    this.authService.login(this.form.value).subscribe((data) => {\n      if (this.retUrl !== null) {\n        this.router.navigate([this.retUrl]);\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <mat-card class=\"card\">\n    <mat-card-content>\n      <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            type=\"text\"\n            formControlName=\"login\"\n            matInput\n            placeholder=\"login\"\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\" class=\"field\">\n          <input\n            formControlName=\"password\"\n            matInput\n            placeholder=\"hasło\"\n            type=\"password\"\n          />\n        </mat-form-field>\n        <button type=\"submit\" mat-raised-button color=\"primary\">\n          Zloguj się\n        </button>\n      </form>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { GlobalConstants } from \"../../common/global-constants\";\nimport { Recipe as RecipeModel } from \"../../model/recipe\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipesService {\n  constructor(private http: HttpClient) {}\n\n  getRecipes = (category?: RecipeModel[\"categoryName\"]) =>\n    this.http.get<RecipeModel[]>(\n      `${GlobalConstants.apiURL}/recipes/${category || \"\"}`\n    );\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { of } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { GlobalConstants } from \"src/app/common/global-constants\";\nimport { User } from \"src/app/model/user\";\n\n@Injectable()\nexport class AuthService {\n  private isloggedIn: boolean;\n\n  constructor(private http: HttpClient, private router: Router) {\n    this.isloggedIn = !!this.getToken();\n  }\n\n  login({ login, password }: Pick<User, \"login\" | \"password\">) {\n    if (!login || !password) {\n      return;\n    }\n\n    return this.http\n      .post<{ token: string }>(`${GlobalConstants.apiURL}/users/login`, {\n        login,\n        password,\n      })\n      .pipe(\n        tap((response) => {\n          this.setToken(response.token);\n          this.isloggedIn = true;\n          return of(this.isloggedIn);\n        })\n      );\n\n    // return of(this.isloggedIn);\n  }\n\n  isUserLoggedIn(): boolean {\n    return this.isloggedIn;\n  }\n\n  logoutUser(retUrl: string): void {\n    this.isloggedIn = false;\n    this.router.navigate([\"login\"], {\n      queryParams: { retUrl },\n    });\n  }\n\n  getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  setToken(token) {\n    localStorage.setItem(\"token\", token);\n  }\n\n  // isAdminUser(): boolean {\n  //   if (this.login == \"Admin\") {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n}\n","export class GlobalConstants {\n  public static apiURL: string = \"http://localhost:8080/api\";\n  public static imagesURL: string = \"http://localhost:8080/img\";\n  public static baseHref: string = \"/recipes\";\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Comment } from \"../../model/comment\";\nimport { CommentAddService } from \"./comment-add.service\";\n\n@Component({\n  selector: \"comment-add\",\n  templateUrl: \"./comment-add.component.html\",\n  styleUrls: [\"./comment-add.component.scss\"],\n  providers: [CommentAddService],\n})\nexport class CommentAddComponent {\n  @Input() recipeId: string;\n  @Output() addCommentEvent = new EventEmitter<Comment>();\n\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private commentAddService: CommentAddService\n  ) {\n    this.form = this.fb.group({\n      content: [\"\", Validators.required],\n    });\n  }\n\n  onSubmit() {\n    this.commentAddService\n      .addComment({ id_recipe: this.recipeId.toString(), ...this.form.value })\n      .subscribe((newComment) => {\n        this.addCommentEvent.emit(newComment);\n      });\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field appearance=\"outline\" class=\"full-width\">\n    <mat-label>Wpisz tutaj swój komentarz</mat-label>\n    <textarea\n      formControlName=\"content\"\n      matInput\n      placeholder=\"Miejsce na Twój komentarz\"\n    ></textarea>\n  </mat-form-field>\n  <button type=\"submit\" mat-raised-button color=\"primary\">Zapisz</button>\n</form>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { APP_BASE_HREF } from \"@angular/common\";\nimport { LoginComponent } from \"./modules/login/login.component\";\nimport { RecipesComponent } from \"./modules/recipes/recipes.component\";\nimport { RecipeComponent } from \"./modules/recipe/recipe.component\";\nimport { GlobalConstants } from \"./common/global-constants\";\nimport { AuthGuardService } from \"./modules/auth/auth-guard.service\";\nimport { MenuComponent } from \"./modules/menu/menu.component\";\nimport { NotFoundComponent } from \"./modules/not-found/not-found.component\";\n\nconst routes: Routes = [\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"\",\n    component: MenuComponent,\n    canActivate: [AuthGuardService],\n    children: [\n      {\n        path: \":category\",\n        component: RecipesComponent,\n      },\n      {\n        path: \":category/:id\",\n        component: RecipeComponent,\n        data: { title: \"Przepis\" },\n      },\n      {\n        path: \"\",\n        component: RecipesComponent,\n        data: { title: \"Przepisy kulinarne\" },\n      },\n    ],\n  },\n  {\n    path: \"**\",\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: \"legacy\" })],\n  exports: [RouterModule],\n  providers: [\n    {\n      provide: APP_BASE_HREF,\n      useValue: GlobalConstants.baseHref,\n    },\n  ],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from \"@angular/common/http\";\nimport { Location } from \"@angular/common\";\nimport { Observable } from \"rxjs\";\nimport { AuthService } from \"./auth.service\";\nimport { catchError } from \"rxjs/operators\";\n\n@Injectable()\nexport class HttpAuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService, private location: Location) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    const authRequest = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.authService.getToken()}`,\n      },\n    });\n    return next.handle(authRequest).pipe(\n      catchError((error) => {\n        if (error.status === 401) {\n          this.authService.logoutUser(this.location.path());\n        }\n        throw error;\n      })\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}